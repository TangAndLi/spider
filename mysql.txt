 
mysql： 
		mysql -uroot -p123mysql -uroot -p123
		quit 或 \t            退出

		mysql status 		  查看状态
		mysql show databases 查看数据库  

备份与恢复：
	cd /var/lib/mysql
   	
	备份；
    mysqldump -uroot-p 数据库名 > ~/Desktop/备份文件.sql		
		
	按提示输入密码：
	
	恢复：
	create database 数据库名 charset=utf8;   -----创建一个数据库
	mysqldump -uroot-p 数据库名 < ~/Desktop/备份文件.sql
		
整型
	数据类型       所占字节     取值范围
	tinyint		 	1字节		-123·127
	smallint		2字节		-32768-32767
	mediumint    	3字节		-8388608-8388607
	int				4字节		-2147483648-2147483647
	bigint			8字节		+-9.22*10的18次方
	
	浮点类型
	float(m,d)      4字节       单精度,m总个数，d小数位
	double(m ,d)    8字节       双精度，---------------
	decimal（m，d）             定点数，decimal 是存储为字符串的浮点数
	
	字符类型（只列出重要的）
	char            0-255  
	-----定义20字节的char是char(20),长度不够20字节也占用20数据库字节 不够空格补上
	
	varchar
	------定义20字节的varchar是varchar(20) 不定义大小会报错
	
	text  
	-------默认自己的占用内存大小，不需定义
	
	
	时间类型
	date            4 字节   日期      格式：2018-09-18
   	time    		3 字节   时间      格式 08:42:20
	datetime        8 字节   日期时间  格式 2018-09-18 08:24:20
	timestamp       4 字节 	 自动存储记录修改时间(current_timestamp)
	(13位毫秒级别，10位秒级别)
	
	year            1 字节   年份1902-2155
	
	复合类型
	set      集合类型     set() 
	enum     枚举类型	  enum()
	
	unsigned(无符号) 主要用于整型和浮点类型，使用其就没有前面的负号，所有数为整数
					 储存数据更长 创建时在字段语句后接上unsigned
	
	zerofill（0填充）	
	
	auto_increment   自动增加 只用于整型 可以设置起始值 默认为1
					  auto_increment 是 primary key 的一个选项 必须跟primary key一起使用
					
	default
			:	默认值  例：default 'xxxx' 跟随not null 一起使用
			
			
	not null
			:定义一个not null 将不允许该列插入null值 
			：创建时在字段语句后接上  not null
			
	 create database hero;   创建一个名为hero的库
	 drop database test;     删除一个名为test的库
	 show databases;         显示当前服务器所有的数据库
	 
	 use 库名;    选中库
	 create table 表名;
	 create table 表名(表名name varchar(20),content);
	 desc book;        查询表
	 drop table 表名;  删除表
	 show tables;      查看当前数据所有的表
	 desc 表名;        查看表的表结构
	 
	 show create database 库名  查看创建库
	 show create table 表名     查看创建表
	 
	 engine=innodb             存储引擎
	 default charset=utf-8     创建表示指定字符集
	 create table 表名（.....）engine=innodb charset=utf8; 
	 
	 修改表名：
	 alter table 旧表名 rename 新的表名;
	 例：alter table user rename new_user;
	 
	 
	 修改表字段类型： 
	 alter table 表名 modify 字段名 varchar(50); 
	 alter table 表名 change 字段原名 字段新名 字段类型;
	
	 增加表字段：
	 alter table 表名 add 字段名 类型
	 例：alter table 表名 add age int；添加一个字段为age 类型为整形
	 
	 增加表字段先后顺序：
	 alter table 表名 add 字段名2 类型2 alter 字段名1;
	 解释：在字段名1后面 添加一个字段名2
	 
	 alter table 表名 add 字段名 int（10） frist;
	 解释：在表名中最开始的位置增加一个 字段名 类型为int，长度为10
	 
	 在之前的字段增加和修改语句中(add/change/modify)中，最后都可以加一个选项first|after
	 例：alter table 表名  modify 字段名 类型（）first;
	
	
	 删除：
	 alter table 表名 drop 字段名;
	 解释:在表名中删除字段名
	 
	 
	 alter table 表名 modify 字段名 类型 not null;
	 Null 类型非空
	 
	 alter table 表名 modify 字段吗 类型 default 'shenzhen' not null;
	 自定义'shenzhen' 加not null使 default类型非空
	 
	 Field :字段的列表
	 Type  : 数据的类型
	 Null  : 是否为空值
	 key   : 主键(primary)类型 PRI|MUL|UNI permary key 是非空 全表唯一     
	 
	 
	 插入记录1：
	 与创建列表中的值一一对应
	 insert into 表名 values(1,'宝强',2000,'河北',1);
	 
	 
	插入记录2：（比较常用）
	 insert into 表名(......)values
	 ('宝强',1000,湖北,1),
	 ('宝强2',1200,湖北,1),
	 ('宝强3',1300,湖北,1);
	
	
	 基础查询：
	 select * from 表名;

	 
	 删除语句：
	 delete from 表名 where 条件; 注意!!(后面一定得跟条件语句，不然整个表全删)！
	 例：delete from star where id=5;
	 解释：删除表star中id为5的行
	
	 注意！auto_increment 的序号字段是一直递增，即便删除某条记录id也不会回滚。
	
	
	 
	 修改语句：
	update 表名 set 字段1=值1,字段2=值2 where 条件;
	例：update star set money=100, sex=1 where id=1;
	解释：将star表中id为1的行的money设为100，sex设为1
	
	注意：因为数据表默认使用安全模式a
		  即除了非主键条件外,其他的条件不允许作为更新的条件.
		  因此,我们可以设置关闭更新条件下的安全模式 
	      SET SQL_SAFE_UPDATES = 0;
	
	
	指定字段查询:

	 select 字段名 from 表名;
	 例：select id, name, money from star; 解释：查询star表中id, username, money字段

	指定字段组合不重复记录：
	select distinct 字段名 from 表名;
	例：select distinct age, sex from star; 解释：查询star表中age和sex组合的不重复结果
	
	select star_name,money,age,location from Star where star_name = 'anglebaby';
	
	
	根据条件查询：
	select * from Star where age=25 or star_name='xuefu';
	
	根据 > < 查询：
	select * from Star where money>3000 or age < 26;
	
	in / not in
	根据名字查询 '在 / 不在'指定集合中的记录
	select * from Star where star_name in('xuefu','anglebaby');
	-----------------------------------not in('xuefu','anglebaby');
	
	在某个闭区间：between x and x
	select * from Star where age between 20 and 30;  #
	
	模糊查询 like '%x%'
	select * from Star where star_name like '%an%';
	
	优先级：
		小括号，not，比较符运算，逻辑符运算
		and 比 or 先运算 如果同时出现并希望先算or 需要结合（）使用
	 
	结果集合排序:
	排序关键词：asc   升序排列，从小到大（默认）
				desc   降序排列，从大到小


	select 字段名 from 表名 order by 字段名 排序关键词
	select id, name, money from star order by money desc;
	select * star order by money desc;
	 
	限制查询的结果集：
	select * from star limit 5; 显示前5个记录
	
 
	常用统计函数：
	select count(*) from Star; 
	select count(*) as totalCount from Star;
	
	通过location进行分组，统计出每个localtion的money数;
	 select sum(money) as locationMoney,location from Star group by location;

	分组及统计：
	select * from 表 group by 字段
	select count(province), province from star group by province;
	解释：对province分组进行及单独统计
	
	整体使用SQL：
	select :选择的列
	from   :
	where  :查询条件
	group by :分组属性having分组过滤的条件
	order by  
	limit    ：起始记录位置，取记录条件
	
	隐式内连接,两表合一表；
	select 字段名1，字段名2 from 表名1, 表名2 where.....;
	
	显示内连接：
	select 字段1 ,字段2 from 表名1 inner join 表名2 on ...;

	
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 